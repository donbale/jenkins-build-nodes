---
- name: AWSDOCKERBUILD PLAYBOOK
  hosts: 'all'
  become: yes
  become_method: sudo

  tasks:

  - name: Change the hostname 
    hostname:
      name: 'awsdockerbuild'

  - name: Add to /etc/hosts
    lineinfile:
      dest: /etc/hosts
      regexp: '^127\.0\.0\.1[ \t]+localhost'
      line: '127.0.0.1 localhost awsdockerbuild'
      state: present 

  - name: Add to network file
    lineinfile:
      dest: /etc/sysconfig/network
      regexp: 'HOSTNAME'
      line: 'HOSTNAME=awsdockerbuild'
      state: present

  - name: Add Wandisco Repo
    yum_repository:
      name: wandisco-git
      description: Wandisco GIT Repository for newer version of GIT
      baseurl: http://opensource.wandisco.com/centos/7/git/$basearch/
      enabled: yes
      gpgcheck: yes
      gpgkey: http://opensource.wandisco.com/RPM-GPG-KEY-WANdisco

  - name: Enable Wandisco Repo
    shell: rpm --import http://opensource.wandisco.com/RPM-GPG-KEY-WANdisco
    async: 15
    poll: 5

  - name: Add Docker repo
    get_url:
      url: https://download.docker.com/linux/centos/docker-ce.repo
      dest: /etc/yum.repos.d/docer-ce.repo
    become: yes

  - name: Enable Docker repo
    ini_file:
      dest: /etc/yum.repos.d/docer-ce.repo
      section: 'docker-ce'
      option: enabled
      value: 0
    become: yes

  - name: Add Node JS Repo
    yum_repository:
      name: node js
      description: Node JS repository
      baseurl: https://rpm.nodesource.com/setup_12.x
      enabled: yes

  - name: Update all packages
    yum:
      name: "*"
      state: latest
  
  - name: ensure a list of packages installed
    yum:
      name: "{{ packages }}"
    vars:
      packages:
      - libstdc++-4.8.5-39.el7.i686
      - vim
      - bash-completion
      - htop
      - tmux
      - screen
      - telnet
      - tree
      - curl
      - python-firewall
      - sudo
      - sqlite
      - make
      - zip
      - unzip
      - which
      - redhat-lsb
      - mesa-libGL-devel
      - mesa-libEGL-devel
      - openssl
      - openssl-devel
      - unixODBC
      - postgresql-libs
      - rpm-build
      - procps
      - spectool
      - chrpath
      - java-1.8.0-openjdk
      - patchelf
      - pigz
      - ccache
      - git-lfs
      - libxkbcommon-x11
      - pulseaudio
      - pulseaudio-libs-devel
      - yum-utils
      - device-mapper-persistent-data
      - lvm2
      - git
      - docker-ce
      - nodejs
      - jq
      - ansible
      - python3
      - python36-devel

  - name: Download and install Docker Compose
    get_url:
      url: https://github.com/docker/compose/releases/download/1.21.2/docker-compose-Linux-x86_64
      dest: /usr/bin/docker-compose
      mode: 0755

  - name: Enable the Docker daemon in systemd
    systemd:
      name: docker
      enabled: yes
      masked: no

  - name: Start the Docker daemon
    systemd:
      name: docker
      state: started
      masked: no

  - name: Install Verdaccio
    shell: npm install --global verdaccio
    async: 15
    poll: 5

  - name: Download Packer
    get_url:
      url: https://releases.hashicorp.com/packer/1.5.5/packer_1.5.5_linux_amd64.zip
      dest: /usr/local/bin/packer_1.5.5_linux_amd64.zip

  - name: Unzip Packer
    shell: unzip /usr/local/bin/packer_1.5.5_linux_amd64.zip && rm /usr/local/bin/packer_1.5.5_linux_amd64.zip
    async: 15
    poll: 5

  - name: Download Terraform
    get_url:
      url: https://releases.hashicorp.com/terraform/0.12.20/terraform_0.12.20_linux_amd64.zip
      dest: /usr/local/bin/terraform_0.12.20_linux_amd64.zip

  - name: Unzip Terraform
    shell: unzip /usr/local/bin/terraform_0.12.20_linux_amd64.zip && rm /usr/local/bin/terraform_0.12.20_linux_amd64.zip
    async: 15
    poll: 5

  - name: Install Locust
    shell: pip3 install locustio
    async: 15
    poll: 5

  - name: Make sure we have a 'wheel' group
    group:
      name: wheel
      state: present

  - name: Add jenkins group
    group:
      name: jenkins

  - name: Add "jenkins" user
    user:
      name: jenkins
      groups: jenkins, wheel, docker
      home: /home/jenkins
      shell: /bin/bash
      password: jenkins1234
      createhome: yes
      system: yes

  - name: Copy git-credentials and change ownership
    copy:
      src: files/jenkins-slave
      dest: /usr/local/bin/jenkins-slave
      owner: jenkins
      group: jenkins

  - name: Copy git-credentials and change ownership
    copy:
      src: files/git-credentials
      dest: /home/jenkins/.git-credentials
      owner: jenkins
      group: jenkins

  - name: Copy git-credentials to root as well
    copy:
      src: files/git-credentials
      dest: /root/.git-credentials

  - name: Run GIT credential for Jenkins user.
    command: git config --global credential.helper 'store --file /home/jenkins/.git-credentials'

  - name: Run GIT credential for root.
    command: git config --global credential.helper 'store --file /root/.git-credentials'

  - name: Create Jenkins SSH directory
    file:
      path: /home/jenkins/.ssh
      state: directory

  - name: Copy authkeys and change ownership
    copy:
      src: files/authkeys
      dest: /home/jenkins/.ssh/authorized_keys
      owner: jenkins
      group: jenkins