{
	"variables": {
        "aws_access_key": "",
        "aws_secret_key": "",
        "ami_name": "windows",
        "aws_region": "eu-west-1",
        "ssh_username": "centos",
        "vpc_id": "vpc-0aca370fca2ffdb02",
        "subnet_id": "subnet-09a3cd93539dbc6f1",
        "security_group_id": "sg-0708866f86a7e87bf",
        "source_ami": "ami-0a2b07f79c45eeef1"
    },

    "builders": [{
        "type": "amazon-ebs",
        "access_key": "{{user `aws_access_key`}}",
        "secret_key": "{{user `aws_secret_key`}}",
        "region": "{{user `aws_region`}}",
        "instance_type": "t2.micro",
        "ami_block_device_mappings": [ {
            "device_name": "/dev/sda1",
            "volume_size": 50,
            "delete_on_termination": true
        } ],
        "launch_block_device_mappings": [ {
            "device_name": "/dev/sda1",
            "volume_size": 50,
            "delete_on_termination": true
        } ],
        "force_deregister": "true",
        "user_data_file": "./provisioners/scripts/SetUpWinRM.ps1",
        "communicator": "winrm",
        "winrm_username": "Administrator",
        "winrm_use_ssl": true,
        "winrm_insecure": true,
        "associate_public_ip_address": false,
        "subnet_id": "{{user `subnet_id`}}",
        "ami_name": "{{user `ami_name`}}",
        "source_ami": "{{user `source_ami`}}",
        "run_tags": {
            "Name": "packer-build-image"
        }
    }],
    "provisioners": [
        {
            "type": "powershell",
            "script": "./provisioners/scripts/disable-uac.ps1"
        },
        {
            "type": "powershell",
            "inline": [
            "dir c:\\"
            ]
        },
        {
            "type": "ansible",
            "playbook_file": "./provisioners/ansible/setup-awswinbuild.yml",
            "extra_arguments": [
                "--connection", "packer", "-vvv",
                "--extra-vars", "ansible_shell_type=powershell ansible_shell_executable=None"
      ]
        }],
    "post-processors": [
    {
      "type": "manifest",
      "output": "manifest.json",
      "strip_path": true,
      "only":["amazon-ebs"]
    }
  ]                                                                                                                                                                                                                                                                                      
}
